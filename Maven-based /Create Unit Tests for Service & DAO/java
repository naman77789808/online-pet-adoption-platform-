package com.petadoption.service;

import com.petadoption.model.User;
import com.petadoption.dao.UserDAO;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Assertions.*;

public class UserServiceTest {

    @Mock
    private UserDAO userDAO;

    @InjectMocks
    private UserService userService;

    private User user;

    @BeforeEach
    public void setUp() {
        MockitoAnnotations.openMocks(this); // Initialize mocks
        user = new User("john_doe", "john.doe@example.com");
    }

    @Test
    public void testRegisterUser() {
        // Arrange
        when(userDAO.save(user)).thenReturn(true); // Mock the DAO method

        // Act
        boolean result = userService.registerUser(user);

        // Assert
        assertTrue(result);
        verify(userDAO, times(1)).save(user); // Verify that save was called once
    }

    @Test
    public void testRegisterUserWithExistingUsername() {
        // Arrange
        when(userDAO.existsByUsername("john_doe")).thenReturn(true); // Mock DAO response

        // Act
        boolean result = userService.registerUser(user);

        // Assert
        assertFalse(result); // Registration should fail
    }
}
